{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { projectStorage, projectFirestore, timeStamp } from \"../Firebase/config\";\nconst useStorage = file => {\n  _s();\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n  useEffect(() => {\n    const storageRef = projectStorage.ref(file.name);\n    const collectionRef = projectFirestore.collection(\"images\");\n    storageRef.put(file).on(\"state_changed\", snao => {\n      let percentage = snap.bytesTransferred / snap.totalBytes * 100;\n      setProgress(percentage);\n    }, err => {\n      setError(err);\n    }, async () => {\n      const url = await storageRef.getDownloadURL();\n      const createdAt = timeStamp();\n      collectionRef.add({\n        url,\n        createdAt\n      });\n      setUrl(url);\n    });\n  }, [file]);\n  return {\n    progress,\n    url,\n    error\n  };\n};\n_s(useStorage, \"xn2AiAzche7NzWswJ7VS1PhvjkU=\");\nexport default useStorage;","map":{"version":3,"names":["useState","useEffect","projectStorage","projectFirestore","timeStamp","useStorage","file","_s","progress","setProgress","error","setError","url","setUrl","storageRef","ref","name","collectionRef","collection","put","on","snao","percentage","snap","bytesTransferred","totalBytes","err","getDownloadURL","createdAt","add"],"sources":["D:/PersonalProjects/Project1/random-project/src/Hooks/useStorage.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport {\r\n  projectStorage,\r\n  projectFirestore,\r\n  timeStamp,\r\n} from \"../Firebase/config\";\r\nconst useStorage = (file) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n  useEffect(() => {\r\n    const storageRef = projectStorage.ref(file.name);\r\n    const collectionRef = projectFirestore.collection(\"images\");\r\n    storageRef.put(file).on(\r\n      \"state_changed\",\r\n      (snao) => {\r\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n        setProgress(percentage);\r\n      },\r\n      (err) => {\r\n        setError(err);\r\n      },\r\n      async () => {\r\n        const url = await storageRef.getDownloadURL();\r\n        const createdAt = timeStamp();\r\n        collectionRef.add({\r\n          url,\r\n          createdAt,\r\n        });\r\n        setUrl(url);\r\n      }\r\n    );\r\n  }, [file]);\r\n  return { progress, url, error };\r\n};\r\nexport default useStorage;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SACEC,cAAc,EACdC,gBAAgB,EAChBC,SAAS,QACJ,oBAAoB;AAC3B,MAAMC,UAAU,GAAIC,IAAI,IAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACY,GAAG,EAAEC,MAAM,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACpCC,SAAS,CAAC,MAAM;IACd,MAAMa,UAAU,GAAGZ,cAAc,CAACa,GAAG,CAACT,IAAI,CAACU,IAAI,CAAC;IAChD,MAAMC,aAAa,GAAGd,gBAAgB,CAACe,UAAU,CAAC,QAAQ,CAAC;IAC3DJ,UAAU,CAACK,GAAG,CAACb,IAAI,CAAC,CAACc,EAAE,CACrB,eAAe,EACdC,IAAI,IAAK;MACR,IAAIC,UAAU,GAAIC,IAAI,CAACC,gBAAgB,GAAGD,IAAI,CAACE,UAAU,GAAI,GAAG;MAChEhB,WAAW,CAACa,UAAU,CAAC;IACzB,CAAC,EACAI,GAAG,IAAK;MACPf,QAAQ,CAACe,GAAG,CAAC;IACf,CAAC,EACD,YAAY;MACV,MAAMd,GAAG,GAAG,MAAME,UAAU,CAACa,cAAc,CAAC,CAAC;MAC7C,MAAMC,SAAS,GAAGxB,SAAS,CAAC,CAAC;MAC7Ba,aAAa,CAACY,GAAG,CAAC;QAChBjB,GAAG;QACHgB;MACF,CAAC,CAAC;MACFf,MAAM,CAACD,GAAG,CAAC;IACb,CACF,CAAC;EACH,CAAC,EAAE,CAACN,IAAI,CAAC,CAAC;EACV,OAAO;IAAEE,QAAQ;IAAEI,GAAG;IAAEF;EAAM,CAAC;AACjC,CAAC;AAACH,EAAA,CA5BIF,UAAU;AA6BhB,eAAeA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}