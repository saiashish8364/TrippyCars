{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nlet val = false;\nif (localStorage.getItem(\"userLogin\")) {\n  val = true;\n}\nlet isLoggedIn = {\n  isAuthenticated: val\n};\nconst Auth = createSlice({\n  name: \"auth\",\n  initialState: isLoggedIn,\n  reducers: {\n    login(state, action) {\n      state.isAuthenticated = true;\n    },\n    logout(state, action) {\n      state.isAuthenticated = false;\n    }\n  }\n});\nexport default Auth.reducer;\nexport const authActions = Auth.actions;","map":{"version":3,"names":["createSlice","val","localStorage","getItem","isLoggedIn","isAuthenticated","Auth","name","initialState","reducers","login","state","action","logout","reducer","authActions","actions"],"sources":["D:/PersonalProjects/Project1/random-project/src/Components/AppStore/Auth.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nlet val = false;\r\nif (localStorage.getItem(\"userLogin\")) {\r\n  val = true;\r\n}\r\nlet isLoggedIn = {\r\n  isAuthenticated: val,\r\n};\r\n\r\nconst Auth = createSlice({\r\n  name: \"auth\",\r\n  initialState: isLoggedIn,\r\n  reducers: {\r\n    login(state, action) {\r\n      state.isAuthenticated = true;\r\n    },\r\n    logout(state, action) {\r\n      state.isAuthenticated = false;\r\n    },\r\n  },\r\n});\r\nexport default Auth.reducer;\r\nexport const authActions = Auth.actions;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,IAAIC,GAAG,GAAG,KAAK;AACf,IAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,EAAE;EACrCF,GAAG,GAAG,IAAI;AACZ;AACA,IAAIG,UAAU,GAAG;EACfC,eAAe,EAAEJ;AACnB,CAAC;AAED,MAAMK,IAAI,GAAGN,WAAW,CAAC;EACvBO,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEJ,UAAU;EACxBK,QAAQ,EAAE;IACRC,KAAKA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACnBD,KAAK,CAACN,eAAe,GAAG,IAAI;IAC9B,CAAC;IACDQ,MAAMA,CAACF,KAAK,EAAEC,MAAM,EAAE;MACpBD,KAAK,CAACN,eAAe,GAAG,KAAK;IAC/B;EACF;AACF,CAAC,CAAC;AACF,eAAeC,IAAI,CAACQ,OAAO;AAC3B,OAAO,MAAMC,WAAW,GAAGT,IAAI,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}